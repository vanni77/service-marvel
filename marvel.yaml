swagger: '2.0'
info:
  version: '1.0.0'
  title: Marvel API
  description: Marvel API
  contact:
    name: Vanni Casari
    email: vanni.casari@gmail.com
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
host: gateway.marvel.com
basePath: /v1/public
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /comics:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Fetches lists of comics with optional filters.
      # This is array of GET operation parameters:
      parameters:
         - $ref: "#/parameters/apikeyParam"
         - $ref: "#/parameters/formatParam"
         - $ref: "#/parameters/formatTypeParam"
         - $ref: "#/parameters/noVariantsParam"
         - $ref: "#/parameters/dateDescriptorParam"
         - $ref: "#/parameters/dateRangeParam"
         - $ref: "#/parameters/titleParam"
         - $ref: "#/parameters/titleStartsWithParam"
         - $ref: "#/parameters/startYearParam"
         - $ref: "#/parameters/issueNumberParam"
         - $ref: "#/parameters/diamondCodeParam"
         - $ref: "#/parameters/digitalIdParam"
         - $ref: "#/parameters/upcParam"
         - $ref: "#/parameters/isbnParam"
         - $ref: "#/parameters/eanParam"
         - $ref: "#/parameters/issnParam"
         - $ref: "#/parameters/hasDigitalIssueParam"
         - $ref: "#/parameters/modifiedSinceParam"
         - $ref: "#/parameters/creatorsParam"
         - $ref: "#/parameters/charactersParam"
         - $ref: "#/parameters/seriesParam"
         - $ref: "#/parameters/eventsParam"
         - $ref: "#/parameters/storiesParam"
         - $ref: "#/parameters/sharedAppearancesParam"
         - $ref: "#/parameters/collaboratorsParam"
         - $ref: "#/parameters/orderByParam"
         - $ref: "#/parameters/limitParam"
         - $ref: "#/parameters/offsetParam"
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/ComicDataWrapper'
parameters:
  apikeyParam:
    name: apikey
    in: query
    description: api key
    required: true
    type: string
  formatParam:
    name: format
    in: query
    description: Filter by the issue format (e.g. comic, digital comic, hardcover).
    required: false
    type: string
    enum: [comic, magazine, trade paperback, hardcover, digest, graphic novel, digital comic, infinite comic]
  formatTypeParam:
    name: formatType
    in: query 
    description: Filter by the issue format type (comic or collection).
    type: string
    enum: [comic, collection]
  noVariantsParam:
    name: noVariants
    in: query
    description: Exclude variants (alternate covers, secondary printings, director's cuts, etc.) from the result set.
    type: boolean
  dateDescriptorParam:
    name: dateDescriptor
    in: query
    description: Return comics within a predefined date range.
    type: string
    enum: [lastWeek, thisWeek, nextWeek, thisMonth]
  dateRangeParam:
    name: dateRange
    in: query
    description: Return comics within a predefined date range. Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02). Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.
    type: string
  titleParam:
    name: title
    in: query
    description: Return only issues in series whose title matches the input.
    type: string
  titleStartsWithParam:
    name: titleStartsWith
    in: query
    description: Return only issues in series whose title starts with the input.
    type: string
  startYearParam:
    name: startYear
    in: query
    description: Return only issues in series whose start year matches the input.
    type: integer
    format: int32
  issueNumberParam:
    name: issueNumber
    in: query
    description: Return only issues in series whose issue number matches the input.
    type: integer
    format: int32
  diamondCodeParam:
    name: diamondCode
    in: query
    description: Filter by diamond code.
    type: string
  digitalIdParam:
    name: digitalId
    in: query
    description: Filter by digital comic id.
    type: integer
    format: int32
  upcParam:
    name: upc
    in: query
    description: Filter by UPC.
    type: string 
  isbnParam:
    name: isbn
    in: query
    description: Filter by ISBN.
    type: string  
  eanParam:
    name: ean
    in: query
    description: Filter by EAN.
    type: string
  issnParam:
    name: issn
    in: query
    description: Filter by ISSN.
    type: string 
  hasDigitalIssueParam:
    name: hasDigitalIssue
    in: query
    description: Include only results which are available digitally.
    type: boolean
  modifiedSinceParam:
    name: modifiedSince
    in: query
    description: Return only comics which have been modified since the specified date.
    type: string
    format: date
  creatorsParam:
    name: creators
    in: query
    description: Return only comics which feature work by the specified creators (accepts a comma-separated list of ids).
    type: string
  charactersParam:
    name: characters
    in: query
    description: Return only comics which feature the specified characters (accepts a comma-separated list of ids).
    type: string
  seriesParam:
    name: series
    in: query
    description: Return only comics which are part of the specified series (accepts a comma-separated list of ids).
    type: string
  eventsParam:
    name: events
    in: query
    description: Return only comics which take place in the specified events (accepts a comma-separated list of ids).
    type: string
  storiesParam:
    name: stories
    in: query
    description: Return only comics which contain the specified stories (accepts a comma-separated list of ids).
    type: string 
  sharedAppearancesParam:
    name: sharedAppearances
    in: query
    description: Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear). Accepts a comma-separated list of ids.
    type: string
  collaboratorsParam:
    name: collaborators
    in: query
    description: Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work). Accepts a comma-separated list of ids.
    type: string
  orderByParam:
    name: orderBy
    in: query
    enum: [-onsaleDate,-title,-issueNumber,-modified, -focDate, onsaleDate, title, issueNumber, modified, focDate]
    description: Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.
    type: string
  limitParam:
    name: limit
    in: query
    description: Limit the result set to the specified number of resources.
    type: integer
    format: int32
  offsetParam:
    name: offset
    in: query
    description: 	Skip the specified number of resources in the result set.
    type: integer
    format: int32
definitions:
  ComicDataWrapper:
    type: object
    properties:
      code:
        type: integer
        format: int32
        description: The HTTP status code of the returned result.
      status: 
        type: string
        description:  A string description of the call status.
      copyright:
        type: string
        description: The copyright notice for the returned result.
      attributionText:
        type: string
        description: The attribution notice for this result. Please display either this notice or the contents of the attributionHTML field on all screens which contain data from the Marvel Comics API.
      attributionHTML:
        type: string
        description: An HTML representation of the attribution notice for this result. Please display either this notice or the contents of the attributionText field on all screens which contain data from the Marvel Comics API.
      data:
        $ref: "#/definitions/ComicDataContainer"
      etag:
        type: string
        description: A digest value of the content returned by the call.
  ComicDataContainer:
    type: object
    properties:
      offset:
        type: integer
        format: int32
        description: The requested offset (number of skipped results) of the call.
      limit:
        type: integer
        format: int32
        description: The requested result limit.
      total:
        type: integer
        format: int32
        description: The total number of resources available given the current filter set.
      count:
        type: integer
        format: int32
        description: The total number of results returned by this call.
      results:
        type: array
        items:
          $ref: "#/definitions/Comic"
        description: The list of comics returned by the call.
  Comic:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: The unique ID of the comic resource.
      digitalId:
        type: integer
        format: int64
        description: The ID of the digital comic representation of this comic. Will be 0 if the comic is not available digitally.
      title:
        type: string
        description: The canonical title of the comic.
      issueNumber:
        type: number
        format: double
        description: The number of the issue in the series (will generally be 0 for collection formats).
      variantDescription:
        type: string
        description: If the issue is a variant (e.g. an alternate cover, second printing, or directorâ€™s cut), a text description of the variant.
      description:
        type: string
        description: The preferred description of the comic.
      modified:
        type: string
        format: date
        description: The date the resource was most recently modified.
      isbn:
        type: string
        description: The ISBN for the comic (generally only populated for collection formats).
      upc:
        type: string
        description: The UPC barcode number for the comic (generally only populated for periodical formats).
      diamondCode:
        type: string
        description: The Diamond code for the comic.
      ean:
        type: string
        description: The EAN barcode for the comic.
      issn:
        type: string
        description: The ISSN barcode for the comic.
      format:
        type: string
        description: The publication format of the comic e.g. comic, hardcover, trade paperback.
      pageCount:
        type: integer
        format: int32
      textObjects:
        type: array
        items:
          $ref: "#/definitions/TextObject"
        description: A set of descriptive text blurbs for the comic.
      resourceURI:
        type: string
        description: The canonical URL identifier for this resource.
      urls:
        type: array
        items:
          $ref: "#/definitions/Url"
        description: A set of public web site URLs for the resource.
      series:
        $ref: "#/definitions/SeriesSummary"
      variants:
        type: array
        items:
          $ref: "#/definitions/ComicSummary"
        description: A list of variant issues for this comic (includes the "original" issue if the current issue is a variant).
      collections:
        type: array
        items:
          $ref: "#/definitions/ComicSummary"
        description: A list of collections which include this comic (will generally be empty if the comic's format is a collection).
      collectedIssues:
        type: array
        items:
          $ref: "#/definitions/ComicSummary"
        description: A list of issues collected in this comic (will generally be empty for periodical formats such as "comic" or "magazine").
      dates:
        type: array
        items:
          $ref: "#/definitions/ComicDate"
        description: A list of key dates for this comic.
      prices:
        type: array
        items:
          $ref: "#/definitions/ComicPrice"
        description: A list of prices for this comic.
      thumbnail:
        $ref: "#/definitions/Image" 
      images:
        type: array
        items:
          $ref: "#/definitions/Image" 
        description: A list of promotional images associated with this comic.
      creators:
        $ref: "#/definitions/CreatorList"
      characters:
        $ref: "#/definitions/CharacterList"
      stories:
        $ref: "#/definitions/StoryList"
      events:
        $ref: "#/definitions/EventList"
  TextObject:
    type: object
    properties:
      type:
        type: string
        description: The canonical type of the text object (e.g. solicit text, preview text, etc.).
      language:
        type: string
        description: The IETF language tag denoting the language the text object is written in.
      text:
        type: string
        description: The text.
  Url:
    type: object
    properties: 
      type:
        type: string
        description: A text identifier for the URL.
      url:
        type: string
        description: A full URL (including scheme, domain, and path).
  SeriesSummary:
    type: object
    properties:
      resourceURI:
        type: string
        description: The path to the individual series resource.
      name:
        type: string
        description: The canonical name of the series.
  ComicSummary:
    type: object
    properties:
      resourceURI:
        type: string
        description: The path to the individual comic resource.
      name:
        type: string
        description: The canonical name of the comic.
  ComicDate:
    type: object
    properties:
      type:
        type: string
        description: A description of the date (e.g. onsale date, FOC date).
      date: 
        type: string
        format: date
        description: The date.
  ComicPrice:
    type: object
    properties:
      type:
        type: string
        description: A description of the price (e.g. print price, digital price).
      price:
        type: number
        format: float
        description: The price (all prices in USD).
  Image:
    type: object
    properties:
      path:
        type: string
        description: The directory path of to the image.
      extension:
        type: string
        description: The file extension for the image.
  CreatorList:
    type: object
    properties:
      available:
        type: integer
        format: int32
        description: The number of total available creators in this list. Will always be greater than or equal to the "returned" value.
      returned:
        type: integer
        format: int32
        description: The number of creators returned in this collection (up to 20).
      collectionURI:
        type: string
        description: The path to the full list of creators in this collection.
      items:
        type: array
        items:
          $ref: "#/definitions/CreatorSummary"
        description: The list of returned creators in this collection.
  CreatorSummary:
    type: object
    properties:
      resourceURI:
        type: string
        description: The path to the individual creator resource.
      name:
        type: string
        description: The full name of the creator.
      role:
        type: string
        description: The role of the creator in the parent entity.
  CharacterList:
    type: object
    properties:
      available:
        type: integer
        format: int32
        description: The number of total available characters in this list. Will always be greater than or equal to the "returned" value.
      returned:
        type: integer
        format: int32
        description: The number of characters returned in this collection (up to 20).
      collectionURI:
        type: string
        description: The path to the full list of characters in this collection.
      items:
        type: array
        items:
          $ref: "#/definitions/CharacterSummary"
        description: The list of returned characters in this collection. 
  CharacterSummary:
    type: object
    properties:
      resourceURI:
        type: string
        description: The path to the individual character resource.
      name:
        type: string
        description: The full name of the character.
      role:
        type: string
        description: The role of the character in the parent entity.  
  StoryList:
    type: object
    properties:
      available:
        type: integer
        format: int32
        description: The number of total available stories in this list. Will always be greater than or equal to the "returned" value.
      returned:
        type: integer
        format: int32
        description: The number of stories returned in this collection (up to 20).
      collectionURI:
        type: string
        description: The path to the full list of stories in this collection.
      items:
        type: array
        items:
          $ref: "#/definitions/StorySummary"
        description: The list of returned stories in this collection.
  StorySummary:
    type: object
    properties:
      resourceURI:
        type: string
        description: The path to the individual story resource.
      name:
        type: string
        description: The full name of the story.
      type:
        type: string
        description: The type of the story (interior or cover).
  EventList:
    type: object
    properties:
      available:
        type: integer
        format: int32
        description: The number of total available events in this list. Will always be greater than or equal to the "returned" value.
      returned:
        type: integer
        format: int32
        description: The number of events returned in this collection (up to 20).
      collectionURI:
        type: string
        description: The path to the full list of events in this collection.
      items:
        type: array
        items:
          $ref: "#/definitions/EventSummary"
        description: The list of returned events in this collection.
  EventSummary:
    type: object
    properties:
      resourceURI:
        type: string
        description: The path to the individual event resource.
      name:
        type: string
        description: The full name of the event. 
  